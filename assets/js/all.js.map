{"version":3,"sources":["all.js"],"names":["AOS","init","disable","startEvent","initClassName","animatedClassName","useClassNames","disableMutationObserver","debounceDelay","throttleDelay","offset","delay","duration","easing","once","mirror","anchorPlacement","boxShadow","document","querySelector","scrolled","addBoxShadow","entries","observer","forEach","entry","isIntersecting","classList","add","remove","IntersectionObserver","observe"],"mappings":";;AAAA;AACAA,GAAG,CAACC,IAAJ,CAAS;AACP;AACAC,EAAAA,OAAO,EAAE,KAFF;AAES;AAChBC,EAAAA,UAAU,EAAE,kBAHL;AAGyB;AAChCC,EAAAA,aAAa,EAAE,UAJR;AAIoB;AAC3BC,EAAAA,iBAAiB,EAAE,aALZ;AAK2B;AAClCC,EAAAA,aAAa,EAAE,IANR;AAMc;AACrBC,EAAAA,uBAAuB,EAAE,KAPlB;AAOyB;AAChCC,EAAAA,aAAa,EAAE,EARR;AAQY;AACnBC,EAAAA,aAAa,EAAE,EATR;AASY;AAGnB;AACAC,EAAAA,MAAM,EAAE,GAbD;AAaM;AACbC,EAAAA,KAAK,EAAE,CAdA;AAcG;AACVC,EAAAA,QAAQ,EAAE,GAfH;AAeQ;AACfC,EAAAA,MAAM,EAAE,MAhBD;AAgBS;AAChBC,EAAAA,IAAI,EAAE,KAjBC;AAiBM;AACbC,EAAAA,MAAM,EAAE,KAlBD;AAkBQ;AACfC,EAAAA,eAAe,EAAE,YAnBV,CAmBwB;;AAnBxB,CAAT,E,CAqBA;;AACA,IAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAAlB;AACA,IAAMC,QAAQ,GAAGF,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAAjB,C,CAEA;;AACA,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAUC,QAAV,EAAsB;AACzCD,EAAAA,OAAO,CAACE,OAAR,CAAgB,UAAAC,KAAK,EAAE;AACrB,QAAG,CAACA,KAAK,CAACC,cAAV,EAAyB;AACvBT,MAAAA,SAAS,CAACU,SAAV,CAAoBC,GAApB,CAAwB,UAAxB;AACD,KAFD,MAEK;AACFX,MAAAA,SAAS,CAACU,SAAV,CAAoBE,MAApB,CAA2B,UAA3B;AACF;AACF,GAND;AAOD,CARD;;AAUA,IAAIN,QAAQ,GAAG,IAAIO,oBAAJ,CAAyBT,YAAzB,CAAf;AACAE,QAAQ,CAACQ,OAAT,CAAiBX,QAAjB","file":"all.js","sourcesContent":["// AOS套件\r\nAOS.init({\r\n  // Global settings:\r\n  disable: false, // accepts following values: 'phone', 'tablet', 'mobile', boolean, expression or function\r\n  startEvent: 'DOMContentLoaded', // name of the event dispatched on the document, that AOS should initialize on\r\n  initClassName: 'aos-init', // class applied after initialization\r\n  animatedClassName: 'aos-animate', // class applied on animation\r\n  useClassNames: true, // if true, will add content of `data-aos` as classes on scroll\r\n  disableMutationObserver: false, // disables automatic mutations' detections (advanced)\r\n  debounceDelay: 50, // the delay on debounce used while resizing window (advanced)\r\n  throttleDelay: 99, // the delay on throttle used while scrolling the page (advanced)\r\n  \r\n\r\n  // Settings that can be overridden on per-element basis, by `data-aos-*` attributes:\r\n  offset: 120, // offset (in px) from the original trigger point，建議120-150\r\n  delay: 0, // values from 0 to 3000, with step 50ms\r\n  duration: 800, // values from 0 to 3000, with step 50ms，建議400-800\r\n  easing: 'ease', // default easing for AOS animations\r\n  once: false, // whether animation should happen only once - while scrolling down\r\n  mirror: false, // whether elements should animate out while scrolling past them\r\n  anchorPlacement: 'top-bottom', // defines which position of the element regarding to window should trigger the animation\r\n});\r\n// 1.先取DOM元素\r\nconst boxShadow = document.querySelector('.js-box-shadow');\r\nconst scrolled = document.querySelector('.js-scrolled');\r\n\r\n// 2. nav往下滑加上box-shadow\r\nconst addBoxShadow = (entries, observer) =>{\r\n  entries.forEach(entry=>{\r\n    if(!entry.isIntersecting){\r\n      boxShadow.classList.add('scrolled');\r\n    }else{\r\n       boxShadow.classList.remove('scrolled');\r\n    }\r\n  })\r\n}\r\n\r\nlet observer = new IntersectionObserver(addBoxShadow);\r\nobserver.observe(scrolled);"]}